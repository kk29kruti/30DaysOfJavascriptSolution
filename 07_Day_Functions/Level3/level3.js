// 1)Modify the userIdGenerator function. Declare a function name userIdGeneratedByUser.
// It doesnâ€™t take any parameter but it takes two inputs using prompt().
// One of the input is the number of characters and the second input is the
// number of ids which are supposed to be generated.

//expected o/p:-
// userIdGeneratedByUser()
// 'kcsy2
// SMFYb
// bWmeq
// ZXOYh
// 2Rgxf
// '
// userIdGeneratedByUser()
// '1GCSgPLMaBAVQZ26
// YD7eFwNQKNs7qXaT
// ycArC5yrRupyG00S
// UbGxOFI7UXSWAyKN
// dIV0SSUTgAdKwStr
// '

// const input1 = prompt("Please enter number of characters");
// const input2 = prompt("Please enter number of ids");
// function userIdGeneratedByUser() {
//   const input = input1 + input2;
//   let ii = [];
//   for (let i = 0; i < 5; i++) {
//     ii.push(input);
//   }
//   console.log("any number of random id generated by user", ii.join(","));
// }

// userIdGeneratedByUser();

//2)Write a function name rgbColorGenerator and it generates rgb colors.
//expected o/p:-
// rgbColorGenerator()
// rgb(125,244,255)

// let rgbColors = [];

// function rgbColorGenerator() {
//   for (let i = 0; i < 3; i++) {
//     let randomNum = Math.floor(Math.random() * 256);
//     if (!rgbColors.includes(randomNum)) {
//       rgbColors.push(randomNum);
//     }
//   }
//   const [color1, color2, color3] = rgbColors;
//   let rgb = `rgb(${color1},${color2},${color3})`;
//   return rgb;
// }
// console.log(rgbColorGenerator());

//3)Write a function arrayOfHexaColors which return any number of hexadecimal colors in an array.

//hint:- Hexadecimal 0xFFFFF = 1048575

// let hexColor = [];
// let hexColor_array = [];

// function arrayOfHexaColors() {
//   //The toString() returns a number as a string.
//   //convert into a base 16
//   let hexColor = (Math.random() * 0xfffff * 1000000).toString(16);
//   let hh1 = "#" + hexColor.slice(0, 6);
//   hexColor_array.push(hh1);
//   return hexColor_array;
// }
// console.log(arrayOfHexaColors());

//4)Write a function arrayOfRgbColors which return any number of RGB colors in an array.

// let rgbColors = [];
// let rgbColors_array = [];

// function arrayOfRgbColors() {
//   for (let i = 0; i < 3; i++) {
//     let randomNum = Math.floor(Math.random() * 256);
//     if (!rgbColors.includes(randomNum)) {
//       rgbColors.push(randomNum);
//     }
//   }
//   const [color1, color2, color3] = rgbColors;
//   let rgb = `rgb(${color1},${color2},${color3})`;
//   rgbColors_array.push(rgb);
//   return rgbColors_array;
// }
// console.log(arrayOfRgbColors());

//5)Write a function convertHexaToRgb which converts hexa color to rgb and it returns an rgb color. (GOOGLE)

//expected o/p:- console.log(convertHexaToRgb("#ff33ff"));  [ 255, 51, 255 ]

// const convertHexaToRgb = (hex) => {
//   const r = parseInt(hex.slice(1, 3), 16);
//   const g = parseInt(hex.slice(3, 5), 16);
//   const b = parseInt(hex.slice(5, 7), 16);

//   return [r, g, b];
// };

// console.log(convertHexaToRgb("#ff33ff"));

//6)Write a function convertRgbToHexa which converts rgb to hexa color and it returns an hexa color.

//expected o/p:- console.log(rgbToHex(0, 51, 255)); // #0033ff

// function convertRgbToHexa(color) {
//   var hex = color.toString(16);
//   return hex.length == 1 ? "0" + hex : hex;
// }

// function rgbToHex(red, green, blue) {
//   return (
//     "#" +
//     convertRgbToHexa(red) +
//     convertRgbToHexa(green) +
//     convertRgbToHexa(blue)
//   );
// }

// console.log(rgbToHex(0, 51, 255)); // #0033ff

//7)Write a function generateColors which can generate any number of hexa or rgb colors.

// let rgbColors = [];
// let hexColor = [];
// let hexColor_array = [];
// let rgbColors_array = [];

// function generateColors(str, n) {
//   if (str === "hexa") {
//     function arrayOfHexaColors() {
//       let hexColor = (Math.random(), 0xfffff, 1000000).toString(16);
//       let hh1 = "#" + hexColor.slice(0, 6);
//       hexColor_array.push(hh1);
//     }
//     for (let i = 0; i < n; i++) {
//       arrayOfHexaColors();
//     }
//     console.log(hexColor_array);
//   } else if (str === "rgb") {
//     function arrayOfRgbColors() {
//       for (let i = 0; i < 3; i++) {
//         let randomNum = Math.floor(Math.random() * 256);
//         if (!rgbColors.includes(randomNum)) {
//           rgbColors.push(randomNum);
//         }
//       }
//       const [color1, color2, color3] = rgbColors;
//       let rgb = `rgb(${color1},${color2},${color3})`;
//       rgbColors_array.push(rgb);
//     }
//     for (let i = 0; i < n; i++) {
//       arrayOfRgbColors();
//     }
//     console.log(rgbColors_array);
//   }
// }
// generateColors("hexa", 4);
// generateColors("rgb", 9);

// expected o/p:-
// console.log(generateColors('hexa', 3)) // ['#a3e12f', '#03ed55', '#eb3d2b']
// console.log(generateColors('hexa', 1)) // '#b334ef'
// console.log(generateColors('rgb', 3)) // ['rgb(5, 55, 175)', 'rgb(50, 105, 100)', 'rgb(15, 26, 80)']
// console.log(generateColors('rgb', 1)) // 'rgb(33,79, 176)'

//8)Call your function shuffleArray, it takes an array as a parameter and it returns a shuffled array

//9)Call your function factorial, it takes a whole number as a parameter and
//it return a factorial of the number

//10)Call your function isEmpty, it takes a parameter and it checks if it is empty or not

//11)Call your function sum, it takes any number of arguments and it returns the sum.

//12)Write a function called sumOfArrayItems, it takes an array parameter and
//return the sum of all the items. Check if all the array items are number types.
//If not give return reasonable feedback.

//13)Write a function called average, it takes an array parameter and returns the average of the
//items. Check if all the array items are number types. If not give return reasonable feedback.

//14)Write a function called modifyArray takes array as parameter and modifies the fifth
//item of the array and return the array. If the array length is less than five it return 'item not found'.

//expected o/p:-console.log(modifyArray(['Avocado', 'Tomato', 'Potato','Mango', 'Lemon','Carrot']);
//['Avocado', 'Tomato', 'Potato','Mango', 'LEMON', 'Carrot']
//console.log(modifyArray(['Google', 'Facebook','Apple', 'Amazon','Microsoft',  'IBM']);
//['Google', 'Facebook','Apple', 'Amazon','MICROSOFT',  'IBM']
//console.log(modifyArray(['Google', 'Facebook','Apple', 'Amazon']);
//  'Not Found'

//15)Write a function called isPrime, which checks if a number is prime number.

//16)Write a functions which checks if all items are unique in the array.
// let arr = [1, 2, 3, 2];
// function check_unique_array(arr) {
//   let first = arr[0];
//   for (let i = 1; i < arr.length; i++) {
//     if (arr[i] != first) {
//       return false;
//     }
//   }
//   return true;
// }

// if (check_unique_array(arr)) {
//   console.log("All Elements are Same");
// } else {
//   console.log("Not all Elements are Same");
// }

//17)Write a function which checks if all the items of the array are the same data type.

// let arr = [1, 2, 3, 2, "kk"];
// function check_datatype_array(arr) {
//   let first = arr[0];
//   for (let i = 1; i < arr.length; i++) {
//     if (typeof arr[i] != typeof first) {
//       return false;
//     }
//   }
//   return true;
// }

// if (check_datatype_array(arr)) {
//   console.log("All Elements are Same Type");
// } else {
//   console.log("Not all Elements are Same Type");
// }

//18)JavaScript variable name does not support special characters or symbols except
//$ or _. Write a function isValidVariable which check if a variable is valid or invalid variable.

// function isValidVariable(name) {
//   try {
//     Function("let " + name);
//   } catch (e) {
//     return false;
//   }
//   return true;
// }

// console.log(isValidVariable("my_var")); // true
// console.log(isValidVariable("1")); // false
// console.log(isValidVariable("$kk")); // true
// console.log(isValidVariable("_kk")); // true
// console.log(isValidVariable("1_kk")); //false

//19)Write a function which returns array of seven random numbers in
//a range of 0-9. All the numbers must be unique.

// let arr = [];
// let str = [];

// function sevenRandomNumbers() {
//   //indexof method je value pass kari hase e array ma exist nahi karti hoy toh -1 sathe compare thay nd loop 7var farse
//   while (arr.length < 7) {
//     let r = Math.floor(Math.random() * 10);
//     if (arr.indexOf(r) === -1) {
//       arr.push(r);
//     }
//   }
//   str.push(arr);
//   console.log(str);
// }

// sevenRandomNumbers();
//expected o/p:-sevenRandomNumbers()
// [(1, 4, 5, 7, 9, 8, 0)]

//20)Write a function called reverseCountries, it takes countries array and
//first it copy the array and returns the reverse of the original array

// const countries = [
//   "Albania",
//   "Bolivia",
//   "Canada",
//   "Denmark",
//   "Ethiopia",
//   "Finland",
//   "Germany",
//   "Hungary",
//   "Ireland",
//   "Japan",
//   "Kenya",
// ];

// function reverseCountries(countries) {
//   let countries1 = countries;
//   let countriesss = [];
//   // console.log("copy of the countries array", countries1);
//   for (let i = countries1.length - 1; i >= 0; i--) {
//     countriesss.push(countries1[i]);
//   }
//   console.log(countriesss);
// }
// reverseCountries(countries);
